# Flag Variable
# Please do not alter this flag
update_install_flag: False
fresh_install_flag: False

# Normal Variable
# Please alter this based on what needed
#
# Download links
github_url: "https://github.com/prometheus/prometheus/releases/download"

# User to run prometheus
configured_user: "{{ user }}"

# Installation destination (obviously)
installation_destination: "/home/{{ user }}/.installedApps"

# Prometheus Configs
# And here lies some variables used for
# Alert rules and Prometheus.yml
# Change the prometheus_version if 
# A new update is needed
prometheus_version: 2.29.2

prometheus_global:
  scrape_interval: 5s
  evaluation_interval: 5s

prometheus_scrape_configs:
  - job_name: 'node_server1'
    static_configs:
      - targets: ['192.168.100.53:9100']

  - job_name: 'node_server2'
    static_configs:
      - targets: ['192.168.100.52:9100']

  - job_name: 'node_dbase'
    static_configs:
      - targets: ['192.168.100.46:9100']

  - job_name: 'node_monitoring'
    static_configs:
      - targets: ['192.168.100.54:9100']

  - job_name: 'allServer'
    static_configs:
      - targets: 
        - '192.168.100.53:9100'
        - '192.168.100.52:9100'
        - '192.168.100.46:9100'
        - '192.168.100.54:9100'

# Examples for prometheus alert
# Source: https://github.com/cloudalchemy/ansible-prometheus/blob/master/defaults/main.yml
#   - alert: Watchdog
#     expr: vector(1)
#     for: 10m
#     labels:
#       severity: warning
#     annotations:
#       description: "This is an alert meant to ensure that the entire alerting pipeline is functional.\nThis alert is always firing, therefore it should always be firing in Alertmanager\nand always fire against a receiver. There are integrations with various notification\nmechanisms that send a notification when this alert is not firing. For example the\n\"DeadMansSnitch\" integration in PagerDuty."
#       summary: 'Ensure entire alerting pipeline is functional'
#   - alert: InstanceDown
#     expr: 'up == 0'
#     for: 5m
#     labels:
#       severity: critical
#     annotations:
#       description: '{% raw %}{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes.{% endraw %}'
#       summary: '{% raw %}Instance {{ $labels.instance }} down{% endraw %}'
#   - alert: RebootRequired
#     expr: 'node_reboot_required > 0'
#     labels:
#       severity: warning
#     annotations:
#       description: '{% raw %}{{ $labels.instance }} requires a reboot.{% endraw %}'
#       summary: '{% raw %}Instance {{ $labels.instance }} - reboot required{% endraw %}'
#   - alert: NodeFilesystemSpaceFillingUp
#     annotations:
#       description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up.{% endraw %}'
#       summary: 'Filesystem is predicted to run out of space within the next 24 hours.'
#     expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
#     for: 1h
#     labels:
#       severity: warning
#   - alert: NodeFilesystemSpaceFillingUp
#     annotations:
#       description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left and is filling up fast.{% endraw %}'
#       summary: 'Filesystem is predicted to run out of space within the next 4 hours.'
#     expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 20\nand\n  predict_linear(node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"}[6h], 4*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
#     for: 1h
#     labels:
#       severity: critical
#   - alert: NodeFilesystemAlmostOutOfSpace
#     annotations:
#       description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.{% endraw %}'
#       summary: 'Filesystem has less than 5% space left.'
#     expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 5\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
#     for: 1h
#     labels:
#       severity: warning
#   - alert: NodeFilesystemAlmostOutOfSpace
#     annotations:
#       description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available space left.{% endraw %}'
#       summary: 'Filesystem has less than 3% space left.'
#     expr: "(\n  node_filesystem_avail_bytes{job=\"node\",fstype!=\"\"} / node_filesystem_size_bytes{job=\"node\",fstype!=\"\"} * 100 < 3\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
#     for: 1h
#     labels:
#       severity: critical
#   - alert: NodeFilesystemFilesFillingUp
#     annotations:
#       description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up.{% endraw %}'
#       summary: 'Filesystem is predicted to run out of inodes within the next 24 hours.'
#     expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 40\nand\n  predict_linear(node_filesystem_files_free{job=\"node\",fstype!=\"\"}[6h], 24*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
#     for: 1h
#     labels:
#       severity: warning
#   - alert: NodeFilesystemFilesFillingUp
#     annotations:
#       description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left and is filling up fast.{% endraw %}'
#       summary: 'Filesystem is predicted to run out of inodes within the next 4 hours.'
#     expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 20\nand\n  predict_linear(node_filesystem_files_free{job=\"node\",fstype!=\"\"}[6h], 4*60*60) < 0\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
#     for: 1h
#     labels:
#       severity: critical
#   - alert: NodeFilesystemAlmostOutOfFiles
#     annotations:
#       description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.{% endraw %}'
#       summary: 'Filesystem has less than 5% inodes left.'
#     expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 5\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
#     for: 1h
#     labels:
#       severity: warning
#   - alert: NodeFilesystemAlmostOutOfFiles
#     annotations:
#       description: '{% raw %}Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf "%.2f" $value }}% available inodes left.{% endraw %}'
#       summary: 'Filesystem has less than 3% inodes left.'
#     expr: "(\n  node_filesystem_files_free{job=\"node\",fstype!=\"\"} / node_filesystem_files{job=\"node\",fstype!=\"\"} * 100 < 3\nand\n  node_filesystem_readonly{job=\"node\",fstype!=\"\"} == 0\n)\n"
#     for: 1h
#     labels:
#       severity: critical
#   - alert: NodeNetworkReceiveErrs
#     annotations:
#       description: '{% raw %}{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf "%.0f" $value }} receive errors in the last two minutes.{% endraw %}'
#       summary: 'Network interface is reporting many receive errors.'
#     expr: "increase(node_network_receive_errs_total[2m]) > 10\n"
#     for: 1h
#     labels:
#       severity: warning
#   - alert: NodeNetworkTransmitErrs
#     annotations:
#       description: '{% raw %}{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf "%.0f" $value }} transmit errors in the last two minutes.{% endraw %}'
#       summary: 'Network interface is reporting many transmit errors.'
#     expr: "increase(node_network_transmit_errs_total[2m]) > 10\n"
#     for: 1h
#     labels:
#       severity: warning
#   - alert: NodeHighNumberConntrackEntriesUsed
#     annotations:
#       description: '{% raw %}{{ $value | humanizePercentage }} of conntrack entries are used{% endraw %}'
#       summary: 'Number of conntrack are getting close to the limit'
#     expr: "(node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75\n"
#     labels:
#       severity: warning
#   - alert: NodeClockSkewDetected
#     annotations:
#       message: '{% raw %}Clock on {{ $labels.instance }} is out of sync by more than 300s. Ensure NTP is configured correctly on this host.{% endraw %}'
#       summary: 'Clock skew detected.'
#     expr: "(\n  node_timex_offset_seconds > 0.05\nand\n  deriv(node_timex_offset_seconds[5m]) >= 0\n)\nor\n(\n  node_timex_offset_seconds < -0.05\nand\n  deriv(node_timex_offset_seconds[5m]) <= 0\n)\n"
#     for: 10m
#     labels:
#       severity: warning
#   - alert: NodeClockNotSynchronising
#     annotations:
#       message: '{% raw %}Clock on {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.{% endraw %}'
#       summary: 'Clock not synchronising.'
#     expr: "min_over_time(node_timex_sync_status[5m]) == 0\n"
#     for: 10m
#     labels:
#       severity: warning